-- MySQL dump 10.13  Distrib 8.0.26, for Win64 (x86_64)
--
-- Host: 67.205.183.72    Database: computer_combat
-- ------------------------------------------------------
-- Server version	8.0.28-0ubuntu0.21.10.3

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

USE `computer_combat`;
--
-- Dumping data for table `ability`
--

LOCK TABLES `ability` WRITE;
/*!40000 ALTER TABLE `ability` DISABLE KEYS */;
INSERT INTO `ability` VALUES (0,'Draw','Draw a card from your deck','new DrawAbility();','draw_card'),(1,'Infect','Spawn 10 [BUG]Bugs[WHITE] on the board','new SpawnAbility(5, {state, move -> A:{return 10;}} as StateAnalyzer<Integer>, []);','infect'),(2,'Open Folder','Collect All [STORAGE]Storage Components','new CollectAbility([], [{match, move, c -> F: {return c.getColor() == 3;}} as CollectFilter],\n	{match, move -> G:{return 64;}} as StateAnalyzer<Integer>\n);','open_folder'),(3,'Tunnel','Collect a row of components','Filter f = new ComponentFilter(\"Select a row\") {\n 	public boolean filter(Component c, MatchState state, Move move) {return c.getX() == 0;}\n};\n\nnew CollectAbility([f], \n	[{match, UseAbilityMove move, c -> F:{\n		Component selected = move.getSelectedComponents().get(0);\n		return c.getY() == selected.getY();\n	}} as CollectFilter],\n        {MatchState state, Move move -> G:{\n		return 8;\n         }} as StateAnalyzer<Integer>\n);','tunnel'),(4,'Click','Attack an Opponent for 5 damage','Filter filter = new CardFilter(\"Choose an opponents card to damage\") {\n     	public boolean filter(Card card, MatchState state, Move move) {\n		return !card.getOwnerUID().equals(state.currentPlayerMove.getUID())\n	}\n};\nnew FocusedDamageAbility([filter], {state, move -> A:{return 5;}} as StateAnalyzer<Integer>);','click'),(5,'Corruption','Transform all [STORAGE]Storage Components[WHITE] to [BUG]Bugs','ComponentFilter filter = new ComponentFilter(\"All Storage Components\") {\n     public boolean filter(Component c, MatchState state, Move move) { return c.getColor() == 3}\n};\n\nnew TransformComponentsAbility(\n  	[],\n        filter,\n        [5]\n);','corrupt'),(6,'Gigabyte Flash','Spawn 10 [STORAGE]Storage Components[WHITE] ','new SpawnAbility(3, {state, move -> A:{return 10;}} as StateAnalyzer, []);','gigabyte_flash'),(7,'Terabyte Onslaught','Deal 3 damage boosted by [STORAGE]Storage Components[WHITE]. Then Collect half of all [STORAGE] Storage Components [WHITE]','Filter filter = new CardFilter(\"Choose an opponents card to damage\") {\n     public boolean filter(Card card, MatchState state, Move move) {return !card.getOwnerUID().equals(state.currentPlayerMove.getUID());}\n    };\n\nComponentFilter storageFilter = new ComponentFilter(\"Storage Components\"){\n	public boolean filter(Component component, MatchState state, Move move) {return component.getColor() == 3};\n} as ComponentFilter;\n    \nStateAnalyzer<Integer> scaleDamage = {\n	state, move -> D:{return 3 + state.countComponents(storageFilter, move).intdiv(2) ;}\n} as StateAnalyzer<Integer>;\n  \nnew MultiAbility(\n        [\n            new FocusedDamageAbility([filter], scaleDamage),\n            new CollectAbility(\n		[],\n		[{match, move, c -> F: {return c.getColor() == 3;}} as CollectFilter], \n		{MatchState state, move -> A:{return state.countComponents(storageFilter, move).intdiv(2);}} as StateAnalyzer<Integer>)\n	]\n);','terabyte_onslaught'),(8,'Violent Volume','Deal 1 damage to all opponents boosted by [POWER] Power Components [WHITE]','ComponentFilter powerFilter = new ComponentFilter(\"Power Filter\") {\n	public boolean filter(Component c, MatchState state, Move move) {return c.getColor() == 6 }\n};\n\nCardFilter opponentCards = new CardFilter(\"Opponent Cards\") {\n	public boolean filter(Card c, MatchState s, Move m) {return !c.getOwnerUID().equals(m.getPlayerUID())}\n}\n\nStateAnalyzer<Integer> powerCount = {state, move -> A:{return 1 + state.countComponents(powerFilter, move).intdiv(2)}} as StateAnalyzer<Integer>;\n\nnew DamageAllAbility(opponentCards, powerCount);','violent_volume'),(9,'Blinding Brightness','Deal 4 damage to all opponents','StateAnalyzer<Integer> damage = {state, move -> A:{return 4;}} as StateAnalyzer<Integer>;\nCardFilter opponentCards = new CardFilter(\"Opponent Cards\") {\n	public boolean filter(Card c, MatchState s, Move m) {return !c.getOwnerUID().equals(m.getPlayerUID())}\n}\nnew DamageAllAbility(opponentCards, damage);','blinding_brightness'),(10,'Key Smash','Collect 5-10 random components. Gain an extra turn.','new MultiAbility(\n	[\n		new CollectAbility(\n			[],\n			[{state, move, c -> C:{return true;}} as CollectFilter],\n			{state, move -> F:{return 5 + (int)(6 * Math.random())}} as StateAnalyzer<Integer>\n		),\n		new ExtraTurnAbility()\n	]\n);','key_smash'),(11,'Open File','There is 20% chance to transform into a Corrupted File. Spawn 5 [STORAGE]Storage Components','new MultiAbility(\n	[\n		new TransformCardAbility(\n			[{card, state, move -> F:{\n				UseAbilityMove abilityMove = (UseAbilityMove) move;\n				return Math.random() < 0.5 && abilityMove.getCard().equals(card);\n			}} as CardFilter],\n			[12],\n			[]\n		),\n		new SpawnAbility(3, {state, move -> F:{return 5;}} as StateAnalyzer<Integer>, [])\n	]\n);\n\n','open_file'),(12,'Open Shortcut','Spawn a random card','new DrawAbility([\n	{state, move -> C:{return 1 + (int)(Math.random() * 11)}} as StateAnalyzer<Integer>\n]);','open_shortcut'),(13,'Arrange Tasks','Select an opponent to move to the first position.','Filter filter = new CardFilter(\"Choose an opponents card to damage\") {\n    	public boolean filter(Card card, MatchState state, Move move) {\n		return !card.getOwnerUID().equals(state.currentPlayerMove.getUID())\n	}\n};\n\nnew CardToFrontAbility([filter]);','arrange_tasks'),(14,'Power Surge','Double the amount of [POWER]Power Components[WHITE] on the board.','ComponentFilter powerFilter = new ComponentFilter(\"Power Filter\") {\n	public boolean filter(Component c, MatchState state, Move move) {return c.getColor() == 6}\n};\n\nnew SpawnAbility(\n	6,\n	{state, move -> A:{ \n		return state.countComponents(powerFilter, move);\n	}} as StateAnalyzer<Integer>,\n	[]\n);','power_surge'),(15,'Receive Packets','Spawn 2 Network Components for every active card that uses it.','new SpawnAbility(\r 	4,\r 	{state, move -> A:{\r 		int count = 0;\r 		for(Card c : state.getAllCards()) {\r 			for( int type : c.getRunComponents() ) {\r 				if(type == 4) {\r 					count++;\r 					break;\r 				}\r 			}\r 		}\r 		return count * 2\r 	}} as StateAnalyzer<Integer>,\r 	[]\r )','recieve_packets'),(16,'Super Speed','Spawn 6-10 Network Components','new SpawnAbility(4, {state, move -> A:{return 6 + (int)(5 * Math.random())}}, [])','super_speed'),(17,'Hyper Speed','Spawn 10 [NETWORK]Network Components[WHITE]. Gain an extra turn.','new MultiAbility([\n    new SpawnAbility(4, {state, move -> A:{return 10}}, []),\n    new ExtraTurnAbility()\n])','hyper_speed'),(18,'Light Speed','Transform All [POWER]Power Components [WHITE]into [NETWORK]Network Components[WHITE]. Then, there is a 10% chance to double [NETWORK] Network Components','ComponentFilter powerFilter = new ComponentFilter(\"All Power Components\") {\n     public boolean filter(Component c, MatchState state, Move move) { return c.getColor() == 6}\n};\n\nComponentFilter networkFilter = new ComponentFilter(\"All Power Components\") {\n     public boolean filter(Component c, MatchState state, Move move) { return c.getColor() == 4}\n};\n\nnew MultiAbility([\n    new TransformComponentsAbility(\n        [],\n        powerFilter,\n        [4]\n    ),\n    new SpawnAbility(\n        4,\n        {state, move -> A:{\n            if(Math.random() < 0.1){\n                return state.countComponents(networkFilter, move)\n            }\n            else {\n                return 0\n            }\n        }} as StateAnalyzer<Integer>,\n        []\n    )\n])','light_speed'),(19,'TCP Handshake','Deal 2 damage to the first enemy, then 2 damage to this card, then 3 damage to the first enemy.','CardFilter opponentFirstCard = new CardFilter(\"First Opponent Card\") {\n	public boolean filter(Card c, MatchState s, Move m) {\n		int index = s.activeEntities.get(s.getOtherProfile(m.getPlayerUID()).getUID()).indexOf(c)\n		return index == 0\n	}\n}\n\nCardFilter allyFirstCard = new CardFilter(\"First Ally Card\") {\n	public boolean filter(Card c, MatchState s, Move m) {\n		return s.activeEntities.get(m.getPlayerUID()).indexOf(c) == 0\n	}\n}\n\nnew MultiAbility([\n	new DamageAllAbility(\n		opponentFirstCard,\n		{state, move -> A:{return 2}} as StateAnalyzer<Integer>\n	),\n	new DamageAllAbility(\n		allyFirstCard,\n		{state, move -> A:{return 2}} as StateAnalyzer<Integer>\n	),\n	new DamageAllAbility(\n		opponentFirstCard,\n		{state, move -> A:{return 3}} as StateAnalyzer<Integer>\n	),\n])','tcp_handshake'),(20,'Datagram Message','There is 50% chance to deal 5 damage to a chosen opponents card.','CardFilter opponentCards = new CardFilter(\"Opponent Cards\") {\n	public boolean filter(Card card, MatchState state, Move m) {return !card.getOwnerUID().equals(state.currentPlayerMove.getUID())}\n}\nnew FocusedDamageAbility([opponentCards], {state, move -> A:{\n	int amount = 5;\n	if( Math.random() > 0.5) {\n		amount = 0;\n	}\n	return amount\n}} as StateAnalyzer<Integer>)','datagram'),(21,'Encrypt','Add 3 Defense to All Ally Cards','CardFilter allyCards = new CardFilter(\"Ally Cards\") {\n	public boolean filter(Card c, MatchState s, Move m) {return c.getOwnerUID().equals(m.getPlayerUID())}\n}\n\nnew ChangeDefenseAbility(\n	[],\n	allyCards,\n	{state, move -> A:{return 3}} as StateAnalyzer<Integer>\n)','encrypt'),(22,'Decrypt','Remove 3 Defense from all Opponent Cards','CardFilter opponentCards = new CardFilter(\"Opponent Cards\") {\n	public boolean filter(Card c, MatchState s, Move m) {return !c.getOwnerUID().equals(m.getPlayerUID())}\n}\n\nnew ChangeDefenseAbility(\n	[],\n	opponentCards,\n	{state, move -> A:{return -3}} as StateAnalyzer<Integer>\n)','decrypt'),(23,'Route Packets','Collect 4 [NETWORK]Network Components[WHITE], then Spawn 6 [NETWORK]Network Components','new MultiAbility([\n	new CollectAbility(\n		[],\n		[{state, move, component -> A:{return component.getColor() == 4}} as CollectFilter],\n		{state, move -> B:{return 4}} as StateAnalyzer<Integer>\n	),\n	new SpawnAbility(\n		4,\n		{state, move -> C:{return 6}} as StateAnalyzer<Integer>,\n		[],\n	)\n]);','route_packets'),(24,'The Cloud','Spawn 5 [NETWORK]Network Components[WHITE] and 5 [STORAGE]Storage Components','new MultiAbility([\n	new SpawnAbility(\n		4,\n		{state, move -> C:{return 6}} as StateAnalyzer<Integer>,\n		[],\n	),\n	new SpawnAbility(\n		3,\n		{state, move -> C:{return 6}} as StateAnalyzer<Integer>,\n		[],\n	)\n]);','the_cloud'),(25,'Black Box','Transform [NETWORK]Network Components[WHITE] into a random component type.','ComponentFilter filter = new ComponentFilter(\"All Storage Components\") {\n     public boolean filter(Component c, MatchState state, Move move) { return c.getColor() == 4}\n};\n\nnew TransformComponentsAbility(\n  	[],\n        filter,\n        [1, 2, 3, 5, 6]\n);','black_box'),(26,'Translate','Transform a selected component to a [NETWORK]Network Component[WHITE]. Gain an extra turn.','ComponentFilter selectable = new ComponentFilter(\"Select Any Component\"){\n	public boolean filter(Component c, MatchState state, Move move) {return true}\n}\n\nComponentFilter selected = new ComponentFilter(\"Selected\") {\n	public boolean filter(Component c, MatchState state, Move move) {\n		UseAbilityMove m = (UseAbilityMove) move\n		return m.getSelectedComponents().contains(c)\n	}\n}\n\nnew MultiAbility([\n	new TransformComponentsAbility(\n		[selectable],\n		selected,\n		[4]\n	),\n	new ExtraTurnAbility()\n])','translate'),(27,'Bug Protection','Collect all [BUG] Bug Components.','new CollectAbility([], [{match, move, c -> F: {return c.getColor() == 5;}} as CollectFilter],\n	{match, move -> G:{return 64;}} as StateAnalyzer<Integer>\n);','remove_bugs');
/*!40000 ALTER TABLE `ability` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `bot`
--

LOCK TABLES `bot` WRITE;
/*!40000 ALTER TABLE `bot` DISABLE KEYS */;
INSERT INTO `bot` VALUES (1,'67ec7d73-78c7-4831-bdcc-f864dd5c2db4','0 1','bot 1','2113487789'),(2,'91a6c870-8d1b-4cfd-af0e-0ecb9d625333','0 1','bot 2','1132156873');
/*!40000 ALTER TABLE `bot` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `bot_card`
--

LOCK TABLES `bot_card` WRITE;
/*!40000 ALTER TABLE `bot_card` DISABLE KEYS */;
INSERT INTO `bot_card` VALUES (0,'Gain Extra Turn','Values moves that yeild an extra turn.','default','new ExtraTurnHeuristicAnalyzer()'),(1,'Use Ability','Values moves that use abilities.','default','new UseAbilityHeuristicAnalyzer()'),(2,'Charge Ability','Values moves that charge cards\' abilities.','default','new ChargeAbilitiesHeuristicAnalyzer()'),(3,'Finish Charging Ability','Values moves that finish charging cards\' abilities','default','new CompletelyChargeAbilitiesHeuristicAnalyzer()'),(4,'Collect Components','Values moves with higher amount of collected components.','default','new ComponentsCollectedHeuristicAnalyzer()'),(5,'Draw Card','Values moves that draw another card.','default','new DrewCardHeuristicAnalyzer()'),(6,'Damage Opponent','Values moves that damage other cards or opponent\'s computer.','default','new DamageHeuristicAnalyzer()'),(7,'Increase CPU Components','Values moves that increase the amount of CPU Components on the board.','default','new IncreaseComponentTypeHeuristicAnalyzer(1)'),(8,'Increase RAM Components','Values moves that increase the amount of RAM Components on the board.','default','new IncreaseComponentTypeHeuristicAnalyzer(2)'),(9,'Increase Storage Components','Values moves that increase the amount of Storage Components on the board.','default','new IncreaseComponentTypeHeuristicAnalyzer(3)'),(10,'Increase Network Components','Values moves that increase the amount of Network Components on the board.','default','new IncreaseComponentTypeHeuristicAnalyzer(4)'),(11,'Increase Bug Components','Values moves that increase the amount of Bug Components on the board.','default','new IncreaseComponentTypeHeuristicAnalyzer(5)'),(12,'Increase Power Components','Values moves that increase the amount of Power Components on the board.','default','new IncreaseComponentTypeHeuristicAnalyzer(6)'),(13,'Keep CPU Components','Values moves that maintain the amount of CPU Components on the board.','default','new KeepComponentTypeHeuristicAnalyzer(1)'),(14,'Keep RAM Components','Values moves that maintain the amount of RAM Components on the board.','default','new KeepComponentTypeHeuristicAnalyzer(2)'),(15,'Keep Storage Components','Values moves that maintain the amount of Storage Components on the board.','default','new KeepComponentTypeHeuristicAnalyzer(3)'),(16,'Keep Network Components','Values moves that maintain the amount of Network Components on the board.','default','new KeepComponentTypeHeuristicAnalyzer(4)'),(17,'Keep Bug Components','Values moves that maintain the amount of Bug Components on the board.','default','new KeepComponentTypeHeuristicAnalyzer(5)'),(18,'Keep Power Components','Values moves that maintain the amount of Power Components on the board.','default','new KeepComponentTypeHeuristicAnalyzer(6)');
/*!40000 ALTER TABLE `bot_card` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `card`
--

LOCK TABLES `card` WRITE;
/*!40000 ALTER TABLE `card` DISABLE KEYS */;
INSERT INTO `card` VALUES (0,'Computer',20,0,0,15,0,'computer',1,0,0,'Protect it at all costs. It lets you play this game.'),(1,'Bubble Sort',2,1,1,4,1,'bubble_sort',2,3,5,'Isn\'t there enough switching in the game, but now we have to sort with it.'),(2,'Directory',3,4,3,8,1,'directory',1,2,5,'A cozy place for those files.'),(3,'Disk Defragmenter',2,1,2,8,1,'disk_defragmenter',1,3,3,'Have you defragmented your disk recently? Take this as a reminder to do so.'),(4,'Fire Wall',6,3,1,8,1,'firewall',4,27,3,'I protect!...from fire?'),(5,'Random Number Generator',3,1,2,6,1,'rng',2,3,5,'Choose a number between 1 and 4294967296, no cheating.'),(6,'Virus',3,2,1,7,1,'virus',4,1,3,'I heard these are dangerous in the real world too'),(7,'Web Search',2,1,1,9,1,'web_search',4,3,3,'BOO! Your browsing history. Scared you didn\'t I?'),(8,'Worm',3,1,5,9,1,'worm',4,3,2,'I heard these are not dangerous in the real world.'),(9,'Flash Drive',3,5,2,8,1,'flash_drive',1,6,4,'If you find my flashdrive from 2008 please let me know.'),(10,'Router',7,3,2,8,1,'router',4,23,5,'Do your packets need directions?'),(11,'Mouse',3,3,4,6,1,'mouse',1,4,5,'How else do you use your computer? A joystick? That would be cool'),(12,'Corrupted File',7,3,5,10,1,'corrupted_file',1,5,1,'I thought I trusted you, but now you must be deleted'),(13,'Hard Drive',5,8,3,7,1,'hardrive',1,7,2,'Its like a flash drive, but bigger. '),(14,'Speaker',5,2,5,9,1,'speaker',1,8,3,'If you turn up your volume you can hear the sound of me winning this game.'),(15,'Monitor',4,3,5,7,1,'monitor',1,9,4,'Brighter, bigger, wider, better.'),(16,'Keyboard',3,3,3,7,1,'keyboard',1,10,5,'I can type at 5 words a minute because I can\'t type without looking at this thing.'),(17,'File',3,2,2,6,1,'file',1,11,5,'Ooo! A file! What\'s in it?!'),(18,'Shortcut',4,2,3,8,1,'shortcut',1,12,4,'I heard these take you from one place to another, but like really quickly.'),(19,'Task Bar',3,4,3,6,1,'task_bar',1,13,4,'Tasks? I\'d rather not. But maybe the bar.'),(20,'Power Strip',4,2,2,9,1,'power_strip',1,14,4,'More POWER! MORE !!!!'),(21,'Packet',3,1,1,8,1,'packet',4,15,5,'A little internet gift.'),(22,'Coaxial Cable',5,1,2,5,1,'coaxial_cable',4,16,4,'[TEMP]'),(23,'Ethernet Cable',6,2,3,7,1,'ethernet',4,17,3,'I can never find it when the WiFi goes out'),(24,'Fiber Optic Cable',7,4,4,10,1,'fiber',4,18,2,'The internet is made up of super fast .... light tubes?'),(25,'TCP',4,4,4,6,1,'tcp',4,19,3,'[TEMP]'),(26,'UDP',4,4,4,4,1,'udp',4,20,4,'[TEMP]'),(27,'Encryption',4,6,3,10,1,'encryption',4,21,3,'[TEMP]'),(28,'Decryption',4,6,4,12,1,'decryption',4,22,3,'[TEMP]'),(29,'WiFi',3,3,2,8,1,'wifi',4,24,4,'[TEMP]'),(30,'NAT',4,4,3,15,1,'nat_box',4,25,3,'[TEMP]'),(31,'DNS',3,2,2,4,1,'dns',4,26,5,'[TEMP');
/*!40000 ALTER TABLE `card` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `collection`
--

LOCK TABLES `collection` WRITE;
/*!40000 ALTER TABLE `collection` DISABLE KEYS */;
INSERT INTO `collection` VALUES (0,'Mystery','Any Card can be found','mystery_pack','mystery_pack',25),(1,'Computer','Its called Computer Combat for a reason','computer_pack','computer_pack',50),(2,'Algorithms','Quick! Sort these for me!','algorithms_pack','algorithms_pack',50),(4,'Networks','The Internet!!!','networks_pack','networks_pack',50),(5,'Data Structures','So much data, so little space.','data_structures_pack','data_structures_pack',50);
/*!40000 ALTER TABLE `collection` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `components`
--

LOCK TABLES `components` WRITE;
/*!40000 ALTER TABLE `components` DISABLE KEYS */;
INSERT INTO `components` VALUES (1,'CPUComponent','cpu'),(2,'RAMComponent','ram'),(3,'StorageComponent','storage'),(4,'NetworkComponent','network'),(5,'BugComponent','bug'),(6,'PowerComponent','power');
/*!40000 ALTER TABLE `components` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `deck`
--

LOCK TABLES `deck` WRITE;
/*!40000 ALTER TABLE `deck` DISABLE KEYS */;
INSERT INTO `deck` VALUES (280270749,'Starter','f07cdf89-8b4b-4d7a-b44f-aac78c978f54'),(673726932,'Select Test','67ec7d73-78c7-4831-bdcc-f864dd5c2db4'),(1084082101,'Virus','49646eae-d1ef-4067-9360-de1ad38f5993'),(1115719868,'A Decent Deck','91a6c870-8d1b-4cfd-af0e-0ecb9d625333'),(1132156873,'Malware','91a6c870-8d1b-4cfd-af0e-0ecb9d625333'),(1365716984,'cy','49646eae-d1ef-4067-9360-de1ad38f5993'),(1556979049,'Demo','67ec7d73-78c7-4831-bdcc-f864dd5c2db4'),(1690378354,'Network Deck','49646eae-d1ef-4067-9360-de1ad38f5993'),(1864431213,'Storage','67ec7d73-78c7-4831-bdcc-f864dd5c2db4'),(2113487789,'A Decent Deck','67ec7d73-78c7-4831-bdcc-f864dd5c2db4');
/*!40000 ALTER TABLE `deck` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `deck_has_card`
--

LOCK TABLES `deck_has_card` WRITE;
/*!40000 ALTER TABLE `deck_has_card` DISABLE KEYS */;
INSERT INTO `deck_has_card` VALUES (1690378354,4,1),(1690378354,6,2),(1690378354,7,2),(1690378354,8,2),(1690378354,10,1),(1132156873,4,1),(1132156873,6,3),(1132156873,8,4),(280270749,2,1),(280270749,14,1),(280270749,15,1),(280270749,16,1),(2113487789,11,1),(2113487789,13,1),(2113487789,14,2),(2113487789,15,1),(2113487789,16,1),(2113487789,20,2),(1084082101,16,2),(1084082101,17,6),(1864431213,23,1),(1864431213,13,2),(1864431213,17,1),(1864431213,6,1),(1864431213,20,2),(1864431213,21,1),(1556979049,23,1),(1556979049,2,1),(1556979049,14,2),(1556979049,15,1),(1556979049,17,1),(1556979049,9,2);
/*!40000 ALTER TABLE `deck_has_card` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `profile`
--

LOCK TABLES `profile` WRITE;
/*!40000 ALTER TABLE `profile` DISABLE KEYS */;
INSERT INTO `profile` VALUES ('02ede276-8d60-4313-9df3-41bcda1b9495','newtest','greyjan.fic@gmail.com',0000000000),('49646eae-d1ef-4067-9360-de1ad38f5993','greyjan','janfc6@gmail.com',0000000339),('4ea014e6-c193-4240-beda-938502d688d5','greytest','greyjan.fic@gmail.com',0000000000),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4','janfic','jan.fic18@ncf.edu',0000002850),('84c5a288-43f9-4f4f-a117-43b54b092c52','othertest','greyjan.fic@gmail.com',0000000000),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333','blakeearth','isaac@blake.earth',0000000384),('982b987e-d0fe-46b9-91ab-6dd1564dc203','testtest','greyjan.fic@gmail.com',0000000000),('botUID','null','null',0000000938),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54','Noetherian','mlepinski@gmail.com',0000000000);
/*!40000 ALTER TABLE `profile` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `profile_owns_card`
--

LOCK TABLES `profile_owns_card` WRITE;
/*!40000 ALTER TABLE `profile_owns_card` DISABLE KEYS */;
INSERT INTO `profile_owns_card` VALUES ('02ede276-8d60-4313-9df3-41bcda1b9495',1,1),('02ede276-8d60-4313-9df3-41bcda1b9495',2,1),('02ede276-8d60-4313-9df3-41bcda1b9495',3,1),('02ede276-8d60-4313-9df3-41bcda1b9495',4,1),('02ede276-8d60-4313-9df3-41bcda1b9495',5,1),('02ede276-8d60-4313-9df3-41bcda1b9495',6,1),('02ede276-8d60-4313-9df3-41bcda1b9495',7,1),('02ede276-8d60-4313-9df3-41bcda1b9495',8,1),('02ede276-8d60-4313-9df3-41bcda1b9495',9,1),('02ede276-8d60-4313-9df3-41bcda1b9495',10,1),('02ede276-8d60-4313-9df3-41bcda1b9495',11,1),('02ede276-8d60-4313-9df3-41bcda1b9495',12,1),('02ede276-8d60-4313-9df3-41bcda1b9495',13,1),('02ede276-8d60-4313-9df3-41bcda1b9495',14,1),('02ede276-8d60-4313-9df3-41bcda1b9495',15,1),('02ede276-8d60-4313-9df3-41bcda1b9495',16,1),('02ede276-8d60-4313-9df3-41bcda1b9495',17,1),('02ede276-8d60-4313-9df3-41bcda1b9495',18,1),('02ede276-8d60-4313-9df3-41bcda1b9495',19,1),('02ede276-8d60-4313-9df3-41bcda1b9495',20,1),('49646eae-d1ef-4067-9360-de1ad38f5993',2,1),('49646eae-d1ef-4067-9360-de1ad38f5993',3,1),('49646eae-d1ef-4067-9360-de1ad38f5993',4,1),('49646eae-d1ef-4067-9360-de1ad38f5993',5,1),('49646eae-d1ef-4067-9360-de1ad38f5993',6,1),('49646eae-d1ef-4067-9360-de1ad38f5993',7,1),('49646eae-d1ef-4067-9360-de1ad38f5993',8,1),('49646eae-d1ef-4067-9360-de1ad38f5993',9,1),('49646eae-d1ef-4067-9360-de1ad38f5993',10,1),('49646eae-d1ef-4067-9360-de1ad38f5993',11,1),('49646eae-d1ef-4067-9360-de1ad38f5993',13,1),('49646eae-d1ef-4067-9360-de1ad38f5993',14,1),('49646eae-d1ef-4067-9360-de1ad38f5993',15,1),('49646eae-d1ef-4067-9360-de1ad38f5993',16,1),('49646eae-d1ef-4067-9360-de1ad38f5993',17,1),('49646eae-d1ef-4067-9360-de1ad38f5993',18,1),('49646eae-d1ef-4067-9360-de1ad38f5993',19,1),('49646eae-d1ef-4067-9360-de1ad38f5993',20,1),('4ea014e6-c193-4240-beda-938502d688d5',1,1),('4ea014e6-c193-4240-beda-938502d688d5',2,1),('4ea014e6-c193-4240-beda-938502d688d5',3,1),('4ea014e6-c193-4240-beda-938502d688d5',4,1),('4ea014e6-c193-4240-beda-938502d688d5',5,1),('4ea014e6-c193-4240-beda-938502d688d5',6,1),('4ea014e6-c193-4240-beda-938502d688d5',7,1),('4ea014e6-c193-4240-beda-938502d688d5',8,1),('4ea014e6-c193-4240-beda-938502d688d5',9,1),('4ea014e6-c193-4240-beda-938502d688d5',10,1),('4ea014e6-c193-4240-beda-938502d688d5',11,1),('4ea014e6-c193-4240-beda-938502d688d5',12,1),('4ea014e6-c193-4240-beda-938502d688d5',13,1),('4ea014e6-c193-4240-beda-938502d688d5',14,1),('4ea014e6-c193-4240-beda-938502d688d5',15,1),('4ea014e6-c193-4240-beda-938502d688d5',16,1),('4ea014e6-c193-4240-beda-938502d688d5',17,1),('4ea014e6-c193-4240-beda-938502d688d5',18,1),('4ea014e6-c193-4240-beda-938502d688d5',19,1),('4ea014e6-c193-4240-beda-938502d688d5',20,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',1,4),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',2,2),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',3,5),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',4,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',5,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',6,2),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',7,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',8,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',9,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',10,7),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',11,9),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',12,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',13,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',14,4),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',15,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',16,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',17,5),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',18,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',19,2),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',20,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',21,2),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',22,4),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',23,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',24,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',25,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',26,1),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',27,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',28,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',29,4),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',30,3),('67ec7d73-78c7-4831-bdcc-f864dd5c2db4',31,3),('84c5a288-43f9-4f4f-a117-43b54b092c52',1,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',2,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',3,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',4,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',5,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',6,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',7,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',8,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',9,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',10,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',11,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',12,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',13,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',14,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',15,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',16,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',17,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',18,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',19,1),('84c5a288-43f9-4f4f-a117-43b54b092c52',20,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',1,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',2,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',3,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',4,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',5,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',6,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',7,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',8,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',9,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',10,1),('91a6c870-8d1b-4cfd-af0e-0ecb9d625333',13,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',1,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',2,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',3,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',4,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',5,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',6,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',7,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',8,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',9,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',10,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',11,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',12,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',13,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',14,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',15,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',16,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',17,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',18,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',19,1),('982b987e-d0fe-46b9-91ab-6dd1564dc203',20,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',1,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',2,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',3,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',4,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',5,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',6,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',7,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',8,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',9,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',10,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',11,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',12,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',13,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',14,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',15,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',16,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',17,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',18,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',19,1),('f07cdf89-8b4b-4d7a-b44f-aac78c978f54',20,1);
/*!40000 ALTER TABLE `profile_owns_card` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `run_requirements`
--

LOCK TABLES `run_requirements` WRITE;
/*!40000 ALTER TABLE `run_requirements` DISABLE KEYS */;
INSERT INTO `run_requirements` VALUES (0,1),(1,1),(3,1),(4,1),(5,1),(6,1),(7,1),(8,1),(14,1),(15,1),(18,1),(19,1),(27,1),(28,1),(30,1),(0,2),(1,2),(3,2),(8,2),(18,2),(27,2),(28,2),(31,2),(0,3),(2,3),(3,3),(9,3),(12,3),(13,3),(17,3),(0,4),(4,4),(6,4),(7,4),(8,4),(10,4),(21,4),(22,4),(23,4),(24,4),(25,4),(26,4),(29,4),(30,4),(31,4),(0,6),(9,6),(10,6),(11,6),(13,6),(14,6),(15,6),(16,6),(20,6),(22,6),(23,6),(24,6),(29,6);
/*!40000 ALTER TABLE `run_requirements` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-05-03 11:20:30
